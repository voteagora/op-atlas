version: '3.8'

services:
  app-test:
    build:
      context: .
      dockerfile: Dockerfile.test
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=test
      - ATLAS_TEST_MODE=true
      - USE_TEST_AUTH=true
      - DATABASE_URL=postgresql://postgres:postgres@postgres-test:5432/atlas_test
      - NEXT_PUBLIC_PRIVY_APP_ID=test-app-id
      - PRIVY_APP_ID=test-app-id
      - PRIVY_APP_SECRET=test-app-secret
      - NEXTAUTH_SECRET=test-nextauth-secret
      - NEXTAUTH_URL=http://localhost:3000
      - MOCK_EXTERNAL_SERVICES=true
    depends_on:
      postgres-test:
        condition: service_healthy
    networks:
      - atlas-test-network
    volumes:
      - ./app:/workspace/app
      - /workspace/app/node_modules

  postgres-test:
    image: postgres:16
    environment:
      POSTGRES_DB: atlas_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"  # Different port to avoid conflicts with dev
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    networks:
      - atlas-test-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Optional: Add a service to run database migrations
  migrate-test:
    build:
      context: .
      dockerfile: Dockerfile.test
    environment:
      - NODE_ENV=test
      - DATABASE_URL=postgresql://postgres:postgres@postgres-test:5432/atlas_test
    depends_on:
      postgres-test:
        condition: service_healthy
    networks:
      - atlas-test-network
    command: ["pnpm", "--filter", "op-atlas", "db:migrate"]
    profiles:
      - migrate

volumes:
  postgres_test_data:

networks:
  atlas-test-network:
    driver: bridge
