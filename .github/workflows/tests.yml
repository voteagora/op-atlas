name: Tests

on:
  workflow_dispatch:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_ENV: "test"
  ATLAS_TEST_MODE: "true"
  USE_TEST_AUTH: "true"
  NEXT_PUBLIC_ATLAS_TEST_MODE: "true"
  NEXT_PUBLIC_USE_TEST_AUTH: "true"
  MOCK_EXTERNAL_SERVICES: "true"

  NEXT_PUBLIC_PRIVY_APP_ID: "test-app-id"
  PRIVY_APP_ID: "test-app-id"
  PRIVY_APP_SECRET: "test-app-secret"

  NEXTAUTH_SECRET: "test-nextauth-secret"
  NEXTAUTH_URL: "http://localhost:3000"

  NEXT_PUBLIC_AGORA_API_URL: "http://localhost:3000/api/mock"
  NEXT_PUBLIC_VERCEL_URL: "http://localhost:3000"
  NEXT_PUBLIC_APP_DOMAIN: "localhost:3000"
  NEXT_PUBLIC_VERCEL_ENV: "development"
  NEXT_PUBLIC_MIXPANEL_TOKEN: "test"
  NEXT_PUBLIC_POSTHOG_KEY: "test"
  NEXT_PUBLIC_SAFE_API_KEY: "test"
  NEXT_PUBLIC_ENV: "development"


jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: atlas_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      # Install pnpm before Node so caching works
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 21
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate GraphQL types
        run: |
          cd app
          pnpm graphql:generate

      - name: Generate Prisma client
        run: |
          cd app
          npx prisma generate

      - name: Install Playwright browsers
        run: |
          cd app
          npx playwright install --with-deps

      - name: Setup test database schema
        run: |
          cd app
          npx prisma db push
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/atlas_test

      - name: Run Playwright tests
        run: |
          cd app
          npx playwright test
        env:
          CI: true
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/atlas_test
          # Test mode is already set in global env above

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: app/playwright-report/
          retention-days: 30
